{"version":3,"file":"static/webpack/static/development/pages/index.js.6974f3bdb437f8dbe0be.hot-update.js","sources":["webpack:///./pages/Examples/05-controlled.mdx"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import {InitialState} from './04-initial-state.example'\nimport {spyState} from '../../src/SpyState'\nexport const attributes = {title: 'Controlled'}\nexport const [Example, Spy] = spyState(InitialState)\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h4\" components={components}>{`Controlled`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The form can be made into an controlled component by passing an\nonChange function. This can be useful if you have an more advanced\nuse case and for examples use multiple forms, need to react to changes\nwhile they are beeing typed or similar.\nIn this case you don't need a saveButton, but you will still need to\npass an onSave function as that will be called when the user submits\nthe form in other ways, with the keyboard for example.`}</MDXTag>\n<MDXTag name=\"h6\" components={components}>{`Code`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"metaString\":\"\"}}>{`<FormHelper\n  inputComponent={TextField}\n  onSave={credentials => this.setState({credentials})}\n  onChange={credentials => this.setState({credentials})}\n  value={this.state.credentials}\n  fields={[{path: ['email'], icon: 'email', label: 'Email'}]}\n/>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h6\" components={components}>{`Demo`}</MDXTag>\n<div>\n  <FormHelper\n    inputComponent={TextField}\n    onSave={credentials => this.setState({credentials})}\n    onChange={credentials => this.setState({credentials})}\n    value={this.state.credentials}\n    fields={[{path: ['email'], icon: 'email', label: 'Email'}]}\n  />\n</div>\n<MDXTag name=\"h6\" components={components}>{`State`}</MDXTag>\n<div>\n  <p>Credentials: {JSON.stringify(this.state.credentials)}</p>\n</div></MDXTag>\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9BA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}