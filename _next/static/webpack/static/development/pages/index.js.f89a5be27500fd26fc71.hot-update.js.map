{"version":3,"file":"static/webpack/static/development/pages/index.js.f89a5be27500fd26fc71.hot-update.js","sources":["webpack:///./pages/Examples/07-controlling-other-fields.example.js","webpack:///./pages/Examples/07-controlling-other-fields.mdx"],"sourcesContent":["import {FormHelper} from 'react-form-helper'\nimport {TextField} from 'react-material-app'\n\nexport class ControllingOtherFields extends React.Component {\n  state = {}\n\n  render() {\n    return (\n      <FormHelper\n        inputComponent={TextField}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'flex-start',\n        }}\n        onSave={user => this.setState({user})}\n        value={this.state.user}\n        fields={[\n          {\n            path: ['name'],\n            icon: 'face',\n            label: 'Name',\n            onChange: updated => {\n              const oldUser = this.state.user || {}\n\n              // Update the displayName only if it matches with the previous name\n              return oldUser.name === oldUser.displayName\n                ? {...updated, displayName: updated.name}\n                : updated\n            },\n          },\n          {\n            path: ['displayName'],\n            icon: 'account_circle',\n            label: 'Display Name',\n          },\n        ]}\n      />\n    )\n  }\n}\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import {ControllingOtherFields} from './07-controlling-other-fields.example'\nimport {spyState} from '../../src/SpyState'\nexport const attributes = {title: 'Controlling other fields'}\nexport const [Example, Spy] = spyState(ControllingOtherFields)\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h4\" components={components}>{`Controlling other fields`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Sometimes you need to controll other fields based on the field the user typed in.\nMaybe to provide a default value or to display a preview of something.`}</MDXTag>\n<MDXTag name=\"h6\" components={components}>{`Code`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\",\"metaString\":\"\"}}>{`<FormHelper\n  inputComponent={TextField}\n  style={{display: 'flex', flexDirection: 'column', alignItems: 'flex-start'}}\n  onSave={user => this.setState({user})}\n  value={this.state.user}\n  fields={[\n    {\n      path: ['name'],\n      icon: 'face',\n      label: 'Name',\n      onChange: updated => {\n        const oldUser = this.state.user || {}\n\n        // Update the displayName only if it matches with the previous name\n        return oldUser.name === oldUser.displayName\n          ? {...updated, displayName: updated.name}\n          : updated\n      },\n    },\n    {path: ['displayName'], icon: 'account_circle', label: 'Display Name'},\n  ]}\n/>\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h6\" components={components}>{`Demo`}</MDXTag>\n<div>\n  <Example />\n</div>\n<MDXTag name=\"h6\" components={components}>{`State`}</MDXTag>\n<div>\n  <p>\n    <Spy />\n  </p>\n</div></MDXTag>\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAGA;AAXA;AAcA;AACA;AACA;AAHA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AApCA;AACA;AADA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}